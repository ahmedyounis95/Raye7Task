apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "raye7.ayounis.com.raye7task"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
android.applicationVariants.all {
    def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
    it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android support libraries
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"

    // image
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // database
    implementation "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // debug database
    debugImplementation "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    implementation "com.google.dagger:dagger-android-support:2.18"
    implementation "com.google.dagger:dagger:2.18"
    annotationProcessor "com.google.dagger:dagger-compiler:2.18"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    // code generator for view
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    def nav_version = "1.0.0-alpha06"

    implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui:$nav_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retroFitVersion"
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    //Gson
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retroFitVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    //Room

    implementation "android.arch.persistence.room:runtime:$rootProject.archVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.archVersion"

    // UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}

